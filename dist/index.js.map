{"version":3,"file":"index.js","sources":["../src/authpage/AuthPage.jsx","../src/requests.js"],"sourcesContent":["import React, { Component } from 'react'\nimport styles from './AuthPage.css'\nimport { BsEnvelopeAt, BsLock, BsTelephone, BsGlobe, BsGoogle } from 'react-icons/bs'\nimport bgImage from \"REGISTRATION_LANDSCAPE_2.png\"\nconsole.log(\"bgImg\", bgImage)\n\nclass AuthPage extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      authOpen: this.props.authOpen ? this.props.authOpen : false,\n      email: '',\n      phone: '',\n      password: '',\n      emailValid: true,\n      phoneValid: true,\n      passwordValid: true,\n      validateMsg: '',\n      isEmail: true,\n      myProps: props\n    }\n    console.log(this.state.myProps)\n  }\n\n  validateEmail = (email) => {\n    const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/\n    let valid = emailRegex.test(email)\n    this.setState({\n      emailValid: valid\n    })\n    !valid\n      ? this.setState({\n          validateMsg: 'Please make sure you input a valid email address'\n        })\n      : true\n  }\n\n  emailVTrue = () => {\n    this.setState({ emailValid: true })\n    this.setState({ validateMsg: '' })\n  }\n\n  validatePassword = (password) => {\n    let valid = password.length >= 8\n    this.setState({ passwordValid: valid })\n    !valid\n      ? this.setState({\n          validateMsg:\n            'Please make sure that your password is 8 characters or more'\n        })\n      : true\n  }\n\n  passwordVTrue = () => {\n    this.setState({ passwordValid: true })\n    this.setState({ validateMsg: '' })\n  }\n\n  validatePhone = (phone) => {\n    let valid = phone.length > 15\n    this.setState({ phoneValid: valid })\n    !valid\n      ? this.setState({\n          validateMsg:\n            'Please Input a valid Phone Number, All Phone numbers must not exceed 15 digits'\n        })\n      : true\n  }\n\n  phoneVTrue = () => {\n    this.setState({ phoneValid: true })\n    this.setState({ validateMsg: '' })\n  }\n\n  onInputChange = (newState) => {\n    this.setState(newState)\n  }\n\n  updateAuthState = (payload) => {\n    this.setState({\n      authOpen: payload\n    })\n  }\n\n  updateOption = (payload)=>{\n    this.setState({\n        isEmail: payload\n    })\n  }\n  submitGoogle = () => {\n\n  }\n  submitManual = async () => {\n    console.log(\"my props\", this.state.myProps)\n    this.validatePassword(this.state.password)\n    this.state.isEmail ? this.validateEmail(this.state.email) : this.validatePhone(this.state.phone)\n    let valid = (this.state.isEmail ? this.state.emailValid : this.state.phoneValid) && this.state.passwordValid\n    if (!valid) {\n      return\n    }\n    let data = {\n      emailSignin : this.state.isEmail,\n      email: this.state.email,\n      username: this.state.email,\n      phone: this.state.phone,\n      password: this.state.password\n    }\n    this.props.sendLogin(data,this.state.myProps.baseURL, this.state.myProps.loginEndpoint).then(res=>{\n      alert(JSON.stringify(res.data))\n      console.log(\"response\", res)\n    }).catch(err=>{\n      alert(err)\n    })\n\n    console.log('submitting form',data)\n  }\n\n  render() {\n    let vaildationMessage = <div>{this.state.validateMsg}</div>\n    let phoneInput = (\n        <div className={styles.inputContainer}>\n            <BsTelephone style={{ width: 40, height: 25 }} />{' '}\n            <input\n            type='number'\n            onFocus={() => {\n                this.phoneVTrue()\n            }}\n            onBlur={(e) => {\n                this.validatePhone(e.target.value)\n            }}\n            onChange={(e) => {\n                this.onInputChange({ phone: e.target.value })\n            }}\n            value={this.state.phone}\n            placeholder='Input Your Phone Number'\n            />\n        </div>\n    )\n\n    let emailInput = (\n        <div className={styles.inputContainer}>\n        <BsEnvelopeAt style={{ width: 40, height: 25 }} />{' '}\n        <input\n          type='text'\n          onFocus={() => {\n            this.emailVTrue()\n          }}\n          onBlur={(e) => {\n            this.validateEmail(e.target.value)\n          }}\n          onChange={(e) => {\n            this.onInputChange({ email: e.target.value })\n          }}\n          value={this.state.email}\n          placeholder='Input a vaild Email Address'\n        />\n      </div>\n    )\n    let authContainerStyle = {\n      backgroundImage: `url(${bgImage})`\n    }\n\n\n    let auth_main = (\n      <div className={styles.AuthContainer} style={authContainerStyle}>\n        <div>\n          <div className={styles.closeButtonContainer}>\n            <button\n              onClick={() => this.updateAuthState(!this.state.authOpen)}\n              className={styles.closeButton}\n            >\n              X\n            </button>\n            <span>\n              <BsGlobe />\n            </span>\n            <span>English</span>\n          </div>\n          <div className={styles.AuthContents}>\n            <div>\n              <h1>Sign In To Shyn Tech</h1>\n              <p>\n                You are just a step away from something amazing, Sign in with\n                either your Phone number or your email address\n              </p>\n              <p className={styles.signUpOptions}><span className={this.state.isEmail ? styles.currentOption: \"\"} onClick={()=>{this.updateOption(true)}}>Email</span> <span className={!this.state.isEmail ? styles.currentOption: \"\"} onClick={()=>{this.updateOption(false)}}>Phone</span></p>\n            </div>\n            <div className={styles.vMessage}>{vaildationMessage}</div>\n\n            {this.state.isEmail ? emailInput : phoneInput}\n            <div className={styles.inputContainer}>\n              <BsLock style={{ width: 40, height: 25 }} />{' '}\n              <input\n                type='password'\n                onFocus={() => {\n                  this.passwordVTrue()\n                }}\n                onBlur={(e) => {\n                  this.validatePassword(e.target.value)\n                }}\n                onChange={(e) => {\n                  this.onInputChange({ password: e.target.value })\n                }}\n                value={this.state.password}\n                placeholder='Input Your Password'\n              />\n            </div>\n          </div>\n          <div className={styles.AuthButtons}>\n            <div>\n              <button\n                onClick={() => {\n                  this.submitManual()\n                }}\n              >\n                Sign In\n              </button>\n            </div>\n            <div>\n              <button\n                onClick={() => {\n                  this.submitGoogle()\n                }}\n              >Or Continue With Google<i> <BsGoogle /> </i></button>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n    return (\n      <div>\n        <div> {this.state.authOpen ? auth_main : ''}</div>\n        <button\n          className={styles.AuthButton}\n          onClick={() => this.updateAuthState(!this.state.authOpen)}\n        >\n          Sign In\n        </button>\n      </div>\n    )\n  }\n}\n\nexport default AuthPage\n","import axios from \"axios\"\r\n\r\nasync function sendLogin (data,baseURL,endpoint){\r\n    let fullURL = `${baseURL}${endpoint}`\r\n    return axios.post(fullURL,data)\r\n}\r\n\r\nfunction sendSignUp (data){\r\n    let signupEndpoint = \"http://localhost:3000/auth/signup\"\r\n    return axios.post(signupEndpoint,data)\r\n}\r\n\r\nexport {sendLogin}"],"names":["console","log","bgImage","AuthPage","_Component","_inheritsLoose","props","_this","call","validateEmail","email","emailRegex","valid","test","setState","emailValid","validateMsg","emailVTrue","validatePassword","password","length","passwordValid","passwordVTrue","validatePhone","phone","phoneValid","phoneVTrue","onInputChange","newState","updateAuthState","payload","authOpen","updateOption","isEmail","submitGoogle","submitManual","state","myProps","Promise","resolve","data","emailSignin","username","sendLogin","baseURL","loginEndpoint","then","res","alert","JSON","stringify","err","e","reject","_proto","prototype","render","_this2","vaildationMessage","React","createElement","phoneInput","className","styles","inputContainer","BsTelephone","style","width","height","type","onFocus","onBlur","target","value","onChange","placeholder","emailInput","BsEnvelopeAt","authContainerStyle","backgroundImage","auth_main","AuthContainer","closeButtonContainer","onClick","closeButton","BsGlobe","AuthContents","signUpOptions","currentOption","vMessage","BsLock","AuthButtons","BsGoogle","AuthButton","Component","endpoint","fullURL","axios","post"],"mappings":"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"}